{"version":3,"sources":["webpack:///./src/templates/blog-list-template.js"],"names":["BlogList","props","state","pageNumArray","componentDidMount","this","setPageArray","componentWillReceiveProps","totalCount","data","allMarkdownRemark","postsPerPage","pageInfo","perPage","Array","from","length","Math","ceil","v","i","setState","render","posts","edges","pathNames","location","pathname","split","page","map","node","title","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","html","aria-label","className","p","to","React","Component","blogListQuery"],"mappings":"6QAGqBA,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,aAAc,CAAC,IAFb,E,kHAInBC,kBAAA,WACEC,KAAKC,gB,EAEPC,0BAAA,WACEF,KAAKC,gB,EAEPA,aAAA,WACE,IAAME,EAAaH,KAAKJ,MAAMQ,KAAKC,kBAAkBF,WAC/CG,EAAeN,KAAKJ,MAAMQ,KAAKC,kBAAkBE,SAASC,QAC5DV,EAAeW,MAAMC,KACvB,CAAEC,OAAQC,KAAKC,KAAKV,EAAaG,KACjC,SAACQ,EAAGC,GAAJ,OAAUA,EAAI,KAEhBf,KAAKgB,SAAS,CAAElB,kB,EAEpBmB,OAAA,WACI,IAAMC,EAAQlB,KAAKJ,MAAMQ,KAAKC,kBAAkBc,MAC1CC,EAAYpB,KAAKJ,MAAMyB,SAASC,SAASC,MAAM,KAC/CC,EAAOJ,EAAUA,EAAUT,OAAS,GAC1C,OACE,kBAAC,IAAD,KACGO,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,MACpB,4BAAKH,GACL,2CAAiBD,EAAKE,YAAYI,MAClC,yBAAKC,wBAAyB,CAAEC,OAAQR,EAAKS,YAInD,yBAAKC,aAAW,2BACd,wBAAIC,UAAU,cACXrC,KAAKH,MAAMC,aAAa2B,KAAI,SAAAa,GAAC,OAC5B,wBAAID,UAAS,cAAeb,GAAQc,EAAI,SAAW,IAAMP,IAAKO,GAC5D,kBAAC,OAAD,CAAMD,UAAS,YAAeE,GAAE,aAAeD,GAC5CA,W,GAzCmBE,IAAMC,WAmD/BC,EAAa","file":"component---src-templates-blog-list-template-js-f035dc3268a5c715ae61.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nexport default class BlogList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { pageNumArray: [1] }\r\n  }\r\n  componentDidMount() {\r\n    this.setPageArray()\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.setPageArray()\r\n  }\r\n  setPageArray() {\r\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\r\n    const postsPerPage = this.props.data.allMarkdownRemark.pageInfo.perPage\r\n    let pageNumArray = Array.from(\r\n      { length: Math.ceil(totalCount / postsPerPage) },\r\n      (v, i) => i + 1\r\n    )\r\n    this.setState({ pageNumArray })\r\n  }\r\nrender() {\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const pathNames = this.props.location.pathname.split(\"/\")\r\n    const page = pathNames[pathNames.length - 1]\r\n    return (\r\n      <Layout>\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h1>{title}</h1>\r\n              <b>Date Posted: {node.frontmatter.date}</b>\r\n              <div dangerouslySetInnerHTML={{ __html: node.html }} />\r\n            </div>\r\n          )\r\n        })}\r\n        <nav aria-label=\"Page navigation example\">\r\n          <ul className=\"pagination\">\r\n            {this.state.pageNumArray.map(p => (\r\n              <li className={`page-item ${page == p ? \"active\" : \"\"}`} key={p}>\r\n                <Link className={`page-link`} to={`blog/page/${p}`}>\r\n                  {p}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n          html\r\n        }\r\n      }\r\n      pageInfo {\r\n        perPage\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`"],"sourceRoot":""}