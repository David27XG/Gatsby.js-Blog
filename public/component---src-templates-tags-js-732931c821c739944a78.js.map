{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","_","capitalize","map","node","slug","fields","frontmatter","title","date","key","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"2FAAA,qHAmDeA,UA7CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEE,IAAEC,WAAWN,GAFf,IAGf,OACE,kBAAC,IAAD,KACE,4BAAKI,GACJF,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KADe,EAECD,EAAKG,YAArBC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,KACf,OACE,yBAAKC,IAAKL,GACR,4BAAKG,GACL,2CAAiBC,GACjB,yBAAKE,wBAAyB,CAAEC,OAAQR,EAAKS,cA8BlD,IAAMC,EAAS","file":"component---src-templates-tags-js-732931c821c739944a78.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/layout\"\r\nimport _ from \"lodash\"\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${_.capitalize(tag)}\"`\r\n  return (\r\n    <Layout>\r\n      <h1>{tagHeader}</h1>\r\n      {edges.map(({ node }) => {\r\n        const { slug } = node.fields\r\n        const { title, date } = node.frontmatter\r\n        return (\r\n          <div key={slug}>\r\n            <h1>{title}</h1>\r\n            <b>Date Posted: {date}</b>\r\n            <div dangerouslySetInnerHTML={{ __html: node.html }} />\r\n          </div>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\nexport default Tags\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}